1/18　30問

主に下記内容

-------------------------------------------
+-*/の応用
if文の応用
gsubの復習

-------------------------------------------

文字はシンプルにchomp、数値はto_iを使ったほうが無難
(改行は無視されるので、余計なものは入らないため)

input.to_s        # => "hello\n" （そのまま文字列化）
input.chomp       # => "hello"    （改行を削除）

 文字列で何番目の文字判定
a = gets.chomp.chars
if a[0]=="2"
    puts "ok"
elsif a[0]=="4"
    puts "error"
else
    puts "unknown"
end


⇧の数値バージョン

a = gets.to_i

case a.digits.reverse[0]  # 数値を桁ごとに分解して最初の桁を確認
when 2
  puts "ok"
when 4
  puts "error"
else
  puts "unknown"
end

メソッド

digits
数値を桁ごとに分解して、逆順で配列にする

12345.digits
# => [5, 4, 3, 2, 1]  # 下の桁から順に配列化


•case文: 同じ値に対する複数の分岐を簡潔に書きたい時。
•if文: より複雑な条件、範囲・論理演算を使いたい時。

-------------------------------------------

時給と分給の計算

時給　分
1200 60

ヒントの通り、一度時給を分給に換算し他方が、
少数が出ず計算にエラーになることを防げる。

a = gets.split.map(&:to_i)
m = a[0]/60
puts m*a[1]

-------------------------------------------

制限を超えたら、固定の数値を指定
a = gets.split.map(&:to_i)
b = a[0] > 5 ? 5 : a[0]
c = a[1] > 5 ? 5 : a[1]
puts b+c

簡単に
もう一回配列にして、最小値で制限
a = gets.split.map(&:to_i)
puts [a[0], 5].min + [a[1], 5].min

-------------------------------------------

case文の練習
※データ型の変換を忘れず(改行も注意)
※caseの後ろにちゃんと指定

a = gets.chomp

case a
when "candy", "chocolate"
  puts "Thanks!"
else
  puts "No!"
end

-------------------------------------------

配列内で複数の特定数値をカウントする。

a = gets.split.map(&:to_i)
puts a.count(0)+a.count(1)+a.count(2)

簡潔に

a = gets.split.map(&:to_i)

puts a.count { |x| [0, 1, 2].include?(x) }

-------------------------------------------

改行で複数文字列を取得し、
中から特定文字をカウントする
a = gets.chomp.split
b = gets.chomp.split
c = gets.chomp.split
d = gets.chomp.split
e = gets.chomp.split
f = gets.chomp.split
g = gets.chomp.split

z = [a,b,c,d,e,f,g].flatten.count("no")
puts z

メソッド
flatten
多重配列（配列の中に配列が含まれる構造）を1次元配列に変換
z = [a,b,c,d,e,f,g].count("no")
# この状態だと、配列内はそのままa~gの文字が入っていると判定され、指定文字のnoは入ってないとカウントが0

flattenを使って、そのa~gの文字を変数に変え、元々の値を代入する。

簡潔に
a = 7.times.map { gets.chomp.split }
z = a.flatten.count("no")
puts z

-------------------------------------------

to_fやfloorなど使わず税率関連の計算

100(円)　10(%税率)    15(%税率) 
a = gets.split.map(&:to_i)
b = a[0]*(100+a[1])/100
c = a[0]*(100+a[2])/100
puts (c-b)

-------------------------------------------

アルファベットで何番目
結構躓いた。
include?()
中に指定したもの入ってるか？(true/falseが返ってくる)
と
index()
インデックス番号そのまま

上記2つのメソッドでできた。

-------------------------------------------

文字列内に変数を代入
"  #{} "
まだ慣れてない！
