1/19 10問
主に下記内容

-------------------------------------------
税率の計算応用
30%の場合
m*（100+30）/100
などで少数以下にならずに使える。

-------------------------------------------

？回改行して文字を取得し、それを1行に出力。
a = gets.to_i

b = a.times.map{gets.chomp}
puts b.join

-------------------------------------------

多重配列の時
flatten

-------------------------------------------

桁数足りない時0埋め

このコードで行けたが。
a = gets.chomp
if a.size == 2
puts "0"+a
elsif a.size == 1
puts a
end

メソッド使ったほうが簡潔で大きい桁数まで対応できる
rjust

a = gets.chomp

　　　　　桁数　何で埋める
puts a.rjust(3, "0")
　　　　　　
-------------------------------------------

受け取った数値を指定範囲まで計算して出力する

a = gets.to_i
puts "#{a} #{a*2} #{a*3} #{a*4} #{a*5} #{a*6} #{a*7} #{a*8} #{a*9}"

a = gets.to_i
puts (1..9).map { |i| a * i }.join(" ")

-------------------------------------------

取得したkm,m,cm,をmmに換算

a = gets.chomp.split
# puts a
if a[1]=="km"
puts a[0].to_i*1000*100*10
elsif a[1] == "m"
puts a[0].to_i*100*10
elsif a[1] == "cm"
puts a[0].to_i*10
elsif a[1] == "mm"
puts a[0]
end

ハッシュで簡潔に

a = gets.chomp.split
b = { "km" => 1_000_000, "m" => 10_000, "cm" => 10, "mm" => 1 }

c = a[0].to_i * b[a[1]]
puts c

-------------------------------------------

難易度がどんどん上がって来て、一問にかかる時間どんどん増えてきた。
splitは置く場所によって結果が変わる。
もう少しhashとflatterを練習しよう。
