1/20 10問
主に下記内容

-------------------------------------------

5回数値取得、その度に改行もする。最大値と最小値を求める。
5.times.map{gets.to_i}

-------------------------------------------

取得した複数の文字配列で、特定文字の回数を基に判定する。
a = gets.chomp
puts a.count("W") >= 5 ? "OK" : "NG"

-------------------------------------------

一つの回数と、それに対応する複数の距離を取得し、その平均値を求める
z = gets.to_i
a = z.times.map{gets.to_i}
puts a.sum/z

-------------------------------------------

複数数値を取得し、合計値の最後1桁だけ出力する
a = gets.split.map(&:to_i)
puts a.sum.to_s.split("").last

-------------------------------------------

冪乗
**

-------------------------------------------

偶数と奇数がセットになったかの判定
a = gets.split.map(&:to_i)
b = a[0] % 2 == 0 ? "G" : "K"
c = a[1] % 2 == 0 ? "G" : "K"

if b=="G"&&c=="K"
puts "YES"
elsif b=="K"&&c=="G"
puts "YES"
else
puts "NO"
end

簡潔に
a = gets.split.map(&:to_i)
puts (a[0].even? ^ a[1].even?) ? "YES" : "NO"

-------------------------------------------

足して0になる数
a = gets.to_i
puts a < 0 ? a.abs : -a

整数の範囲を見てよく考えよう

-------------------------------------------

改行した一週間の確率を取得し、一定確率以下の日数を合計する
a = 7.times.map{gets.to_i}
b= a[0]<=30 ? "D" : "N"
c= a[1]<=30 ? "D" : "N"
d= a[2]<=30 ? "D" : "N"
e= a[3]<=30 ? "D" : "N"
f= a[4]<=30 ? "D" : "N"
g= a[5]<=30 ? "D" : "N"
h= a[6]<=30 ? "D" : "N"

z = [b,c,d,e,f,g,h]
puts z.count("D")


簡潔に


ブロックパラメータ使用
a = 7.times.map { gets.to_i }
puts a.count { |x| x <= 30 }

※||中身の命名は適当になんでもいい
※||は配列の中身を1つずつ取り出して、なんらかの処理をする
※||の右側にどうやってxを使っていくかを記述する

-------------------------------------------

よく見かけるが、使い方があやふやだった
ブロックパラメータの認識を深めた。
-------------------------------------------
