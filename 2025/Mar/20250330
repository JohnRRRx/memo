3/30

スキルチェック
Cランク　1問

-------------------------------------------

カードのポイント換算

・100円ごとにポイントが貯まる
・商品を大きく4種類に分け、それぞれの還元率が異なる
・食料品 5%
・書籍 3%
・衣類 2%
・その他 1%
・[種類区分 金額]の形で与えられる (食料品が0,書籍が1,衣類が2,その他が3)
・計算方法は商品ごとではなく、一度種類別で合計してから還元率を計算
・100円未満は切り捨て
・合計ポイントを出力

-------------------------------------------

amout = gets.to_i                           　　　         # 商品数を取得
list = amout.times.map{gets.split.map(&:to_i)}　　　 　　　 # 商品数の分、明細を取得
point = []                                  　　　         # ポイント用空配列

foo = 0                                     　　　         # 種類別の合計金額を用意
boo = 0                                     　　　        
clo = 0                                     　　　        
oth = 0                                     　　　      

list.each do |n,pr|                      　　　            # リストを種類ごとに合計していく
  if n==0　　　 　　　 　　　 　　　 　　　 　　　 　　　 　　　
    foo += pr                                          
  elsif n==1                                            
    boo += pr                                          
  elsif n==2                                            
    clo += pr                                            
  elsif n==3                                          
    oth += pr                                          
  end
end

puts point << foo/100*5 + boo/100*3 + clo/100*2 + oth/100
                                                          # 食料品 5%、書籍 3%、衣類 2%、その他 1%、の順番でポイントを集計

-------------------------------------------

今回は種類少ないのでこれで行けたが、
種類が多い場合、直打ちでは対応しきれない
下記の式は、種類が多い場合でも対応できる

n = gets.to_i
categories = [0, 0, 0, 0]                 # 食料品、書籍、衣類、その他の合計金額

n.times do                                # 商品数の分、明細を取得
  type, price = gets.split.map(&:to_i)    # 種類と値段を分けて処理していく
  categories[type] += price               # 種類ごとに累計
end

points = categories[0] / 100 * 5 +        # 各種類のポイント計算していく
         categories[1] / 100 * 3 +       　
         categories[2] / 100 * 2 +      　
         categories[3] / 100           　

puts points
